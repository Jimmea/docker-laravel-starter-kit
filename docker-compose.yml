version: '3'
services:
  # The nginx Server
  nginx:
    build:
      context: ./
      dockerfile: ./docker-dev/nginx/nginx.dockerfile
    volumes:
      - ./docker-dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./source/public:/var/www/public
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - php

  # App
  php:
    build:
      context: ./
      dockerfile: ./docker-dev/php.dockerfile
    links:
      - mysql
      - redis
    volumes:
      - ./source:/var/www
  # MySQL
  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - '3306:3306'
    expose:
      - 3306
    volumes:
      - mysqlData:/var/lib/mysql/
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: laravel

  # Node Assets Compiler
  node:
    build:
      context: ./
      dockerfile: ./docker-dev/node.dockerfile
    volumes:
      - ./source:/home/node/app

  # Phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      - PMA_HOSTS=mysql
      - PMA_PORT=3306
    #      - PMA_USER=laravel
    #      - PMA_PASSWORD=root
    ports:
      - '8082:80'
    links:
      - mysql

    # Redis
  redis:
    image: redis
    ports:
      - "6379:6379"
    expose:
      - 6379
    volumes:
      - ./redis/data:/data

  # Kibana search
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    volumes:
      - ./elastic/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - esnet

  # Elastic search
  es01:
    build: elastic
    container_name: es01
    environment:
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=es01,es02
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - node.name=es01
      - discovery.seed_hosts=es02
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elastic/data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet

  es02:
    build: elastic
    container_name: es02
    environment:
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=es01,es02
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - node.name=es02
      - discovery.seed_hosts=es01
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elastic/data02:/usr/share/elasticsearch/data
    networks:
      - esnet

  # Mongo
  # mongodb:
  #   image: mongo:4-xenial
  #   container_name: "mongodb"
  #   ports:
  #       - 27017:27017
volumes:
  mysqlData:
  redisData:
  elasticsearchData:

networks:
  esnet:
